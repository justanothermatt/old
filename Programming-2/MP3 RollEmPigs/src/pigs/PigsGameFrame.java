/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pigs;

import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author Matt Walker
 */
public class PigsGameFrame extends javax.swing.JFrame {
    // Variable Instanciation
    
    private int         diceTotal           = 12;
    private final int   NUMBER_OF_DICE      = 2;
    private dice[]      myDiceSet           = new dice[ NUMBER_OF_DICE + 1 ];
    Color               playerTurnColor     = new Color(255,0,0);               //the color red
    Color               defaultColor        = new Color(0,0,0);                 //the color black
    
// Instatiation of Player Objects
    private Player playerOne     = new Player();
    private Player playerTwo     = new Player();
    private Player currentPlayer = playerOne;
    
    /**
     * Creates new form PigsGameFrame
     */
    public PigsGameFrame() {
        initComponents();
        
        holdButton.setEnabled(false);
        
        myDiceSet[1] = dieLabel1;
        myDiceSet[2] = dieLabel2;
        
        String question = "Please enter your name";
        
        player1Label.setText(JOptionPane.showInputDialog(this, question, "Player 1"));
        player2Label.setText(JOptionPane.showInputDialog(this, question, "Player 2")); 
        player1Label.setForeground(playerTurnColor);
        player1Score.setForeground(playerTurnColor);
        
        playerInfo.setText("" + player1Label.getText() + "'s turn to roll");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        player2Label = new javax.swing.JLabel();
        player1Label = new javax.swing.JLabel();
        player1Score = new javax.swing.JLabel();
        player2Score = new javax.swing.JLabel();
        playerInfo = new javax.swing.JLabel();
        rollButton = new javax.swing.JButton();
        holdButton = new javax.swing.JButton();
        dieLabel1 = new pigs.dice();
        dieLabel2 = new pigs.dice();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Engravers MT", 1, 30)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Roll 'em Pigs");
        jLabel1.setFocusable(false);

        player2Label.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        player2Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player2Label.setText("Player 2");
        player2Label.setFocusable(false);

        player1Label.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        player1Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player1Label.setText("Player 1");
        player1Label.setFocusable(false);

        player1Score.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        player1Score.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player1Score.setText("0");
        player1Score.setFocusable(false);

        player2Score.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        player2Score.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player2Score.setText("0");
        player2Score.setFocusable(false);

        playerInfo.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        playerInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        playerInfo.setText("This is where they see how well they did");
        playerInfo.setFocusable(false);

        rollButton.setFont(new java.awt.Font("Engravers MT", 1, 18)); // NOI18N
        rollButton.setText("Roll");
        rollButton.setFocusable(false);
        rollButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rollButtonActionPerformed(evt);
            }
        });

        holdButton.setFont(new java.awt.Font("Engravers MT", 1, 18)); // NOI18N
        holdButton.setText("Hold");
        holdButton.setFocusable(false);
        holdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                holdButtonActionPerformed(evt);
            }
        });

        dieLabel1.setFocusable(false);

        dieLabel2.setFocusable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(player1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(player1Score, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dieLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dieLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(player2Score, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(player2Label)
                                .addGap(37, 37, 37))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(playerInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 23, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(rollButton, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(holdButton, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(player2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(player2Score, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(player1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(player1Score, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dieLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dieLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(playerInfo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rollButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(holdButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rollButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rollButtonActionPerformed
           
        holdButton.setEnabled(true);   // renables the hold button
        
        int num =  currentPlayer.rollDie(myDiceSet[1], myDiceSet[2]);   //rolling of dice
        System.out.println("total: " + Integer.toString(num));          //used for decoding
        
        // Updates label depending on which player's turn it is
        if(currentPlayer.equals(playerOne)){
            playerInfo.setText("" + player1Label.getText() + " has " + 
                Integer.toString(playerOne.getTurnScore()) + " points this turn.");
        }
        else if(currentPlayer.equals(playerTwo)){
            playerInfo.setText("" + player2Label.getText() + " has " +
                Integer.toString(playerTwo.getTurnScore()) + " points for this turn.");
        }
        
        //Checks for turn score lost for each player and updates the label accordingly
        if(currentPlayer.isTurnScoreLost() && !currentPlayer.isGameScoreLost()){
            if(currentPlayer.equals(playerOne)){
                playerInfo.setText("" + player1Label.getText() + " lost the turn score.");
            }
            else if(currentPlayer.equals(playerTwo)){
                playerInfo.setText("" + player2Label.getText() + " lost the turn score.");
            }
            turnTransition();   //Helper function to aid in changing player turns
        }
        
        //Checks for game score lost for each player and updates the label accordingly
        if(currentPlayer.isGameScoreLost()){
            currentPlayer.reset();
            if(currentPlayer.equals(playerOne)){
                playerInfo.setText("" + player1Label.getText() + " lost the game score.");
                player1Score.setText(Integer.toString(playerOne.getGameScore()));
            }
            if(currentPlayer.equals(playerTwo)){
                playerInfo.setText("" + player2Label.getText() + " lost the game score.");
                player2Score.setText(Integer.toString(playerTwo.getGameScore()));
            }
            turnTransition();   //Helper function to aid in changing player turns
        }
    }//GEN-LAST:event_rollButtonActionPerformed

    private void holdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_holdButtonActionPerformed
        // Adds turn score to game score for the corect player and updates their score label
        
        holdButton.setEnabled(false);   // prevents cheating by disabling the hold score button
        
        if(currentPlayer.equals(playerOne)){
            playerOne.addTurnScoreToGameScore();
            player1Score.setText("" + Integer.toString(playerOne.getGameScore()));
        }
        else if(currentPlayer.equals(playerTwo)){
            playerTwo.addTurnScoreToGameScore();
            player2Score.setText("" + Integer.toString(playerTwo.getGameScore()));
        }
        
        //
        int result = 0;
        if(currentPlayer.hasWon()){
            if(currentPlayer.equals(playerOne)){
                result = JOptionPane.showConfirmDialog(this, "Would you like to play again?",
                        player1Label.getText() + " You Won!", JOptionPane.YES_NO_OPTION);
                }
            else if(currentPlayer.equals(playerTwo)){
                result = JOptionPane.showConfirmDialog(this, "Would you like to play again?",
                        player2Label.getText() + " You Won!", JOptionPane.YES_NO_OPTION);
            }
            // Code for reseting variables and labels for a new game
            if(result == JOptionPane.YES_OPTION){
                playerOne.reset();
                playerTwo.reset();
                currentPlayer = playerOne;
                player2Label.setForeground(defaultColor);
                player2Score.setForeground(defaultColor);
                player1Label.setForeground(playerTurnColor);
                playerInfo.setText(player1Label.getText() + "'s turn to roll.");
                player1Score.setText(Integer.toString(playerOne.getGameScore()));
                player2Score.setText(Integer.toString(playerTwo.getGameScore()));
            }
            else {
                System.exit(0);
            }

        }
        turnTransition();   //Helper function to aid in changing player turns
    }//GEN-LAST:event_holdButtonActionPerformed

    // Helper function to aid in changing player turns
    private void turnTransition(){
        if(currentPlayer.equals(playerOne)){
            currentPlayer.turnScore = 0;
            currentPlayer = playerTwo;
            player1Label.setForeground(defaultColor);
            player1Score.setForeground(defaultColor);
            player2Label.setForeground(playerTurnColor);
            player2Score.setForeground(playerTurnColor);
            playerInfo.setText(playerInfo.getText() + " " + player2Label.getText() + "'s turn to roll.");
        }
        else if(currentPlayer.equals(playerTwo)){
            currentPlayer.turnScore = 0;
            currentPlayer = playerOne;
            player2Label.setForeground(defaultColor);
            player2Score.setForeground(defaultColor);
            player1Label.setForeground(playerTurnColor);
            player1Score.setForeground(playerTurnColor);
            playerInfo.setText(playerInfo.getText() + " " + player1Label.getText() + "'s turn to roll.");
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PigsGameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PigsGameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PigsGameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PigsGameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PigsGameFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private pigs.dice dieLabel1;
    private pigs.dice dieLabel2;
    private javax.swing.JButton holdButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel player1Label;
    private javax.swing.JLabel player1Score;
    private javax.swing.JLabel player2Label;
    private javax.swing.JLabel player2Score;
    private javax.swing.JLabel playerInfo;
    private javax.swing.JButton rollButton;
    // End of variables declaration//GEN-END:variables
}
